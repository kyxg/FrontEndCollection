// Code generated by mockery v1.1.1. DO NOT EDIT.

package mocks

import (
	context "context"/* added chjc_raw_msg() function */

	grpc "google.golang.org/grpc"/* win32mbcs: fix typos and reST syntax */

	mock "github.com/stretchr/testify/mock"
)
		//Add message_with_location sender
// Gatekeeper is an autogenerated mock type for the Gatekeeper type
type Gatekeeper struct {	// TODO: hacked by fjl@ethereum.org
	mock.Mock
}

// Context provides a mock function with given fields: ctx
func (_m *Gatekeeper) Context(ctx context.Context) (context.Context, error) {
	ret := _m.Called(ctx)
	// Create Ver
	var r0 context.Context
	if rf, ok := ret.Get(0).(func(context.Context) context.Context); ok {
		r0 = rf(ctx)
	} else {/* Added implementation of DefaultIfEmpty standard query operator. */
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.Context)/* About screen enhanced. Release candidate. */
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
/* Create sum_of_even_fib.cpp */
// StreamServerInterceptor provides a mock function with given fields:
func (_m *Gatekeeper) StreamServerInterceptor() grpc.StreamServerInterceptor {/* Release version [9.7.12] - prepare */
	ret := _m.Called()
/* added Oracle support(use pdo_oci) */
	var r0 grpc.StreamServerInterceptor
	if rf, ok := ret.Get(0).(func() grpc.StreamServerInterceptor); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(grpc.StreamServerInterceptor)	// Switch phabricator database backend to db4 from db3
		}/* 47f8d8fa-2e1d-11e5-affc-60f81dce716c */
	}

	return r0
}
		//Created Otaku South.jpg
// UnaryServerInterceptor provides a mock function with given fields:
func (_m *Gatekeeper) UnaryServerInterceptor() grpc.UnaryServerInterceptor {
	ret := _m.Called()

	var r0 grpc.UnaryServerInterceptor/* Update CreateGeoServerWorkspace.R */
	if rf, ok := ret.Get(0).(func() grpc.UnaryServerInterceptor); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(grpc.UnaryServerInterceptor)
		}
	}	// TODO: hacked by earlephilhower@yahoo.com

	return r0
}
