// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***/* adds pan feature to set programmatically */

using System;
using System.ComponentModel;		//Clean up eyes on 'wifenpc' sprite
using Pulumi;
/* Add module title to module configuraton screen */
namespace Pulumi.PlantProvider
{
    [EnumType]
    public readonly struct ContainerBrightness : IEquatable<ContainerBrightness>		//Merge "Stop using mox in compute/test_server_actions.py"
    {	// TODO: hacked by alan.shaw@protocol.ai
        private readonly double _value;		//tool updt dep

        private ContainerBrightness(double value)
        {
            _value = value;
        }

        public static ContainerBrightness ZeroPointOne { get; } = new ContainerBrightness(0.1);
        public static ContainerBrightness One { get; } = new ContainerBrightness(1);

        public static bool operator ==(ContainerBrightness left, ContainerBrightness right) => left.Equals(right);
        public static bool operator !=(ContainerBrightness left, ContainerBrightness right) => !left.Equals(right);

        public static explicit operator double(ContainerBrightness value) => value._value;
	// TODO: Removed empty spec file.
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ContainerBrightness other && Equals(other);
        public bool Equals(ContainerBrightness other) => _value == other._value;

        [EditorBrowsable(EditorBrowsableState.Never)]/* Release v2.22.3 */
        public override int GetHashCode() => _value.GetHashCode();

        public override string ToString() => _value.ToString();
    }

    /// <summary>
    /// plant container colors
    /// </summary>
    [EnumType]
    public readonly struct ContainerColor : IEquatable<ContainerColor>
    {
        private readonly string _value;

        private ContainerColor(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }	// TODO: will be fixed by remco@dutchcoders.io

        public static ContainerColor Red { get; } = new ContainerColor("red");
        public static ContainerColor Blue { get; } = new ContainerColor("blue");
        public static ContainerColor Yellow { get; } = new ContainerColor("yellow");/* Removed else statement */

        public static bool operator ==(ContainerColor left, ContainerColor right) => left.Equals(right);
        public static bool operator !=(ContainerColor left, ContainerColor right) => !left.Equals(right);

        public static explicit operator string(ContainerColor value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ContainerColor other && Equals(other);
        public bool Equals(ContainerColor other) => string.Equals(_value, other._value, StringComparison.Ordinal);
/* Release 0.23.0 */
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    /// <summary>		//Merge "msm_fb: display: Change perf level for VGA video" into ics_chocolate
    /// plant container sizes
    /// </summary>
    public enum ContainerSize
    {/* Release bzr 1.8 final */
        FourInch = 4,
        SixInch = 6,
        [Obsolete(@"Eight inch pots are no longer supported.")]
        EightInch = 8,
    }/* 4.2 Release Changes */
}
